name: Build and Deploy to Appetize.io

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: tutorial-task-android-app/package-lock.json

    - name: Install dependencies
      working-directory: ./tutorial-task-android-app
      run: npm ci

    - name: Build Next.js static site
      working-directory: ./tutorial-task-android-app
      run: npm run build

    - name: Sync Capacitor project
      working-directory: ./tutorial-task-android-app
      run: ./node_modules/.bin/cap sync android

    - name: Build Android APK
      # Note: The working directory for this step is even deeper
      working-directory: ./tutorial-task-android-app/android
      run: ./gradlew assembleDebug

    - name: Upload to Appetize.io and Create Test Link
      # This step must run from the root, so we set the working directory back
      working-directory: ./
      run: |
        APK_PATH="tutorial-task-android-app/android/app/build/outputs/apk/debug/app-debug.apk"
        API_TOKEN="${{ secrets.APPETIZE_API_TOKEN }}"
        
        RESPONSE=$(curl "https://api.appetize.io/v1/apps" -F "file=@$APK_PATH" -F "platform=android" -u "$API_TOKEN: ")
        
        APP_URL=$(echo $RESPONSE | jq -r .appURL)
        
        echo "Your app is ready to test at: $APP_URL"
        echo "Test Link: $APP_URL" >> $GITHUB_STEP_SUMMARY
